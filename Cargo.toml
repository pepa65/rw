[workspace]
members = [".", "cli"]
default-members = ["cli"]

[workspace.package]
version = "0.7.6"
authors = [
    "Fina Wilke <code@felinira.net>",
    "piegames <info@piegames.de>",
    "Brian Warner <warner@lothar.com>",
    "github.com/pepa65 <pepa65@passchier.net>",
]
description = "Get things from one computer to another, safely"
keywords = ["magic-wormhole", "wormhole", "file-transfer", "transfer"]
homepage = "http://magic-wormhole.io/"
repository = "https://github.com/pepa65/rw/tree/main/cli"
license = "EUPL-1.2"
rust-version = "1.75"
edition = "2021"

[workspace.dependencies]
arboard = { version = "3.2.0", default-features = false }
async-std = { version = "1.12.0", features = ["pin-project-lite", "slab"], default-features = false }
async-trait = "0.1.57"
base64 = { version = "0.22.0", features = ["alloc"], default-features = false }
bytecodec = "0.4.15"
clap = "4"
clap_complete = "4"
color-eyre = "0.6.0"
console = { version = "0.15.0", default-features = false }
crypto_secretbox = { version = "0.1.1", features = ["alloc", "rand_core", "salsa20"], default-features = false }
ctrlc = "3.2.1"
derive_more = { version = "1.0", default-features = false }
dialoguer = { version = "0.11", default-features = false }
env_logger = { version = "0.11", default-features = false }
eyre = { version = "0.6.5", features = ["auto-install"], default-features = false }
futures = "0.3.12"
hex = { version = "0.4.2", features = ["alloc"], default-features = false }
hkdf = "0.12.2"
indicatif = "0.17.0"
log = "0.4.13"
noise-protocol = "0.2"
noise-rust-crypto = { version = "0.6.0-rc.1", features = ["use-blake2", "use-chacha20poly1305", "use-x25519"], default-features = false }
number_prefix = { version = "0.4.0", default-features = false }
percent-encoding = { version = "2.1.0", default-features = false }
qr2term = "0.3.0"
rand = { version = "0.8.3", default-features = false }
rmp-serde = "1.0.0"
serde = { version = "1.0.120", default-features = false }
serde_derive = "1.0.120"
serde_json = "1.0.61"
sha-1 = { version = "0.10.0", default-features = false }
sha2 = { version = "0.10.0", default-features = false }
spake2 = "0.4.0"
stun_codec = "0.3.0"
tar = { version = "0.4.33", default-features = false }
thiserror = "1.0.24"
time = { version = "0.3.7", default-features = false }
trycmd = { version = "0.15", default-features = false }
url = "2.2.2"
tracing = { version = "0.1", default-features = false }
tracing-subscriber = { version = "0.3", features = ["smallvec", "thread_local"], default-features = false }
test-log = { version = "0.2", default-features = false }

[package]
name = "magic-wormhole"
categories = ["network-programming", "asynchronous"]
documentation = "https://docs.rs/magic-wormhole/latest/"
readme = "README.md"

version.workspace = true
authors.workspace = true
description.workspace = true
keywords.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true

rust-version.workspace = true
edition.workspace = true

[package.metadata.binstall]
pkg-url = "{repo}/releases/download/v{version}/{name}"
pkg-fmt = "bin"

[package.metadata.docs.rs]
features = ["all"]

[dependencies]
serde = { workspace = true}
serde_json = { workspace = true }
serde_derive = { workspace = true }
crypto_secretbox = { workspace = true }
spake2 = { workspace = true }
sha-1 = { workspace = true }
sha2 = { workspace = true }
hkdf = { workspace = true }
hex = { workspace = true, features = ["serde"] }
rand = { workspace = true }
base64 = { workspace = true }
time = { workspace = true, features = ["formatting"] }

derive_more = { workspace = true, features = ["deref", "display", "from"] }
thiserror = { workspace = true }

futures = { workspace = true }
url = { workspace = true, features = ["serde"] }
percent-encoding = { workspace = true }

tracing = { workspace = true}

# Transit dependencies


stun_codec = { workspace = true, optional = true }
bytecodec = { workspace = true, optional = true }
noise-rust-crypto = { workspace = true, optional = true }
async-trait = { workspace = true, optional = true }
noise-protocol = { workspace = true, optional = true }
# Transfer dependencies

rmp-serde = { workspace = true, optional = true }
tar = { workspace = true, optional = true }

# Forwarding dependencies

# rmp-serde = â€¦ # defined above

[target.'cfg(not(target_family = "wasm"))'.dependencies]
libc = { version = "0.2.101", default-features = false }
async-std = { version = "1.12.0", features = ["async-attributes", "async-channel", "memchr"], default-features = false }
async-tungstenite = { version = "0.27", features = ["async-std-runtime"] }
async-io = "2.2.0"

# Transit

socket2 = { version = "0.5.0", optional = true, features = ["all"] }
if-addrs = { version = "0.13", optional = true }

# Transfer

[target.'cfg(target_family = "wasm")'.dependencies]
wasm-timer = "0.2.5"
ws_stream_wasm = "0.7.3"
getrandom = "0.2.5"

# for some tests
[dev-dependencies]
test-log = { workspace = true }
eyre = { workspace = true }

[features]
transfer = ["transit", "dep:tar", "dep:rmp-serde"]
transit = [
    "dep:noise-rust-crypto",
    "dep:noise-protocol",
    "dep:socket2",
    "dep:stun_codec",
    "dep:if-addrs",
    "dep:bytecodec",
    "dep:async-trait",
]
forwarding = ["transit", "dep:rmp-serde"]
default = ["transit", "transfer"]
all = ["default", "forwarding"]

# TLS implementations for websocket connections via async-tungstenite
# required for optional wss connection to the mailbox server
tls = ["async-tungstenite/async-tls"]
native-tls = ["async-tungstenite/async-native-tls"]
# Enable experimental transfer-v2 support. The protocol is not yet finalized and is subject to change.
# By enabling this option you are opting out of semver stability.
experimental-transfer-v2 = []
experimental = ["experimental-transfer-v2"]

[profile.release]
overflow-checks = true
strip = "symbols"
lto = true
opt-level = "z"
codegen-units = 1
panic = "abort"
